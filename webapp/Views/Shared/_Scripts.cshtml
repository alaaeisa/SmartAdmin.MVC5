<!-- Link to Google CDN's jQuery + jQueryUI; fall back to local -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script> if (!window.jQuery) { document.write('<script src="/scripts/libs/jquery-2.1.1.min.js"><\/script>'); } </script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script> if (!window.jQuery.ui) { document.write('<script src="/scripts/libs/jquery-ui-1.10.3.min.js"><\/script>'); } </script>

<!-- IMPORTANT: SmartAdmin Core -->
@Scripts.Render("~/scripts/smartadmin")

@if (Request.IsAuthenticated)
{
    <!-- PACE LOADER - turn this on if you want ajax loading to show (caution: uses lots of memory on iDevices)-->
    <script data-pace-options='{ "restartOnRequestAfter": true }' src="~/scripts/plugin/pace/pace.min.js"></script>
    <!-- Demo purpose only! -->
    <script src="/scripts/demo.min.js"></script>
}

<!-- Voice command : plugin -->
<script src="~/scripts/speech/voicecommand.min.js"></script>

<!-- SmartChat UI : plugin -->
@Scripts.Render("~/scripts/smart-chat")

<!-- DataTables : plugin -->
@Scripts.Render("~/scripts/datatables")

<!-- jQGrid : plugin -->
@Scripts.Render("~/scripts/jq-grid")

<!-- Forms : plugin -->
@Scripts.Render("~/scripts/forms")

<!-- Flot Chart Plugin: Flot Engine, Flot Resizer, Flot Tooltip, Morris, Sparkline, EasyPie -->
@Scripts.Render("~/scripts/charts")

<!-- Vector Maps Plugin: Vectormap engine, Vectormap language -->
@Scripts.Render("~/scripts/vector-map")

<!-- Full Calendar -->
@Scripts.Render("~/scripts/full-calendar")

<!-- DO NOT REMOVE : GLOBAL FUNCTIONS! -->
<script>

   



    @*if (@Session["Authorize"] == null) {
      
        var refUrl = "@Url.Action("UserLogin", "Users")";
        location.href = refUrl;
    }*@
    $(document).ready(function () {
        pageSetUp();
      //  drawBreadCrumb();
        $('.datepicker').on("change", function () {
            ChangeDate(this);
        });
        DataTableStyle();
    });

       function DataTableStyle() {
        $('table,th').css({ 'text-align':'center','cursor':'pointer'});
        //$('table th').css({ 'background-color':'lightgreen'});
          // $('table th').css({ 'background-color': 'Black', 'color': '#FFFFFF' });
            $('table th').css({ 'background-color': 'DimGray', 'color': '#FFFFFF' });
           
           //DimGray
    }


    
       function printdiv(printpage) {
           var headstr = "<html><head><title></title></head><body>";
           var footstr = "</body>";
           var newstr = document.all.item(printpage).innerHTML;
           var oldstr = document.body.innerHTML;
           document.body.innerHTML = headstr + newstr + footstr;
           window.print();
           document.body.innerHTML = oldstr;
           return false;
       }
    function ChangeDate(_Date) {
        var date = $(_Date).val();
        if (date.length > 0) {
            var temp;
            if (date.toString().includes('.')) {
                temp = date.split('.');
                date = temp[2] + "/" + temp[1] + "/" + temp[0];
                $(_Date).val(date);
            }
        }
    }

      function ToggleBtnSave() {
        var disabled = $('#btnSave').prop('disabled');
        if (disabled) { $('#btnSave').attr('disabled', false); }
        else { $('#btnSave').attr('disabled', true); }
    }
    //function SerializeFormData() {
    //  //  debugger;
    //    data = {};
    //    $('form input,select,textarea').each(function () {
    //        if ($(this).attr('type') == 'checkbox') { data[$(this).attr('name')] = $(this).is(':checked'); }
    //        else {data[$(this).attr('name')] = $(this).val();}

    //    });
    //    if (DetailsList && DetailsList.length > 0) {
    //        data[NameOfListProp] = JSON.stringify(DetailsList);
    //    }
    //    return data;
    //}

    var _formdata;
    function AppnedFormFiles() {
        var fileExist = document.getElementById('inpFile');
        if (!fileExist) return
        var files = document.getElementById('inpFile').files;
        for (var i = 0; i < files.length; i++) {
            _formdata.append(files[i].name, files[i]);
        }
    }
    var DetailsList_Service = [];
    function NewSerializeFormData() {
        _formdata = new FormData();
        $('form input,select,textarea').each(function () {
            if ($(this).attr('type') == 'checkbox') { _formdata.append($(this).attr('name'), $(this).is(':checked')); }
            else { _formdata.append($(this).attr('name'), $(this).val()); }
        });
        if (DetailsList != null || DetailsList != undefined) {
            if (DetailsList && DetailsList.length > 0) {
                _formdata.append(NameOfListProp, JSON.stringify(DetailsList));
            }
        }
        if (DetailsList_Service != null || DetailsList_Service != undefined) {
            if (DetailsList_Service && DetailsList_Service.length > 0) {
                _formdata.append("InvoiceServices", JSON.stringify(DetailsList_Service));
            }
        }
       
        AppnedFormFiles();
    }


    function SaveFormData() {
        debugger;
        if (!($("#smartform").valid())) {
            return;
        }

        if (!ValidLogicData()) {
            return;
        }
        ToggleBtnSave();
        NewSerializeFormData();
       // var FormDataObj = SerializeFormData();
        $.ajax({
            url: saveUrl,
            data: _formdata,
            type: 'POST',
            dataType: 'json',
            processData: false,
            contentType: false,
            //data: FormDataObj,
            //type: 'POST',
            //dataType: 'json',
            success: function (data) {
                   // debugger;
                ToggleBtnSave();
                if (data.Status == true) {
                    NotificationMessage(data);
                    setTimeout(function () { (window.location.href = redirectUrl) }, 3000);
                }
                else {
                    NotificationMessage(data);
                }
            },
            error: function (ex) {
                ToggleBtnSave();
            }
        });



    }
    function validationItemData() {
        var done = true;
        if ($('#ItemID').val() == "-1" || $('#ItemID').val() == null || $('#nUnitID').val() == "-1" || $('#nUnitID').val() == null || $('#Qty').val() == "" || $('#Price').val() == "") {
            ShowMessage("", "ادخل بيانات العنصر كامله ", "red")
            done= false;
        }
        return done;
    }


    function NotificationMessage(data) {

        if (data.Status == true) {
            $.smallBox({
                title: " ",
                content: "    " + data.Message+ " .......",
                color: "Green",
               //iconSmall: "fa fa-cloud",
                timeout: 5000

            });
        }
        else {
            $.smallBox({
                title: " ",
                content: "    " + data.Message+ " .......",
                color: "red",
                //iconSmall: "fa fa-cloud",
                timeout: 5000

            });
        }

    }

    function ShowMessage(_title, _content, _color) {
        $.smallBox({
            title: _title,
            content: _content,
            color: _color,
            iconSmall: "fa ",
            timeout: 5000

        });
    }

    //********************
       var DetailsList = [];
        var editMode = false;
        var object = {};
         var MyTable;
    function DrawTable(data) {

        columns.push({
            title: "الاجراءت", render: function (data, type, full, meta) {
                var btn = '<a href="#" onclick="RowDoublClick(this);return false;"><span class="glyphicon glyphicon-pencil" title="تعديل"></span></a>';
                btn += '   <a href="#" onclick=" Delete(' + full.SerialNo + ',this);return false;"><span class="glyphicon glyphicon-trash" title="حذف"></span></a>';
                return btn;
            }
        });
        var responsiveHelper_ItemTable = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        var arr;
        if (data == null) {
            arr = null;
        }
        else {
            arr = data;
        }
        MyTable = $('#ItemTable').DataTable({
            bDestroy: true,
            data: arr,
            language: {
                url: languageJsonUrl
            },
            columns: columns,
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": "",
                "sSwfPath": "" + "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "filter": false,
            "preDrawCallback": function () {
                if (!responsiveHelper_ItemTable) {
                    responsiveHelper_ItemTable = new ResponsiveDatatablesHelper($('#ItemTable'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_ItemTable.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_ItemTable.respond();
            }
        });
        $('#ItemTable tbody').on('dblclick', 'tr', function () {
            RowDoublClick(this);
        });
    }

    function AddToTable() {
        if (MyTable) {
            if (editMode) {
                MyTable.clear();
                MyTable.rows.add(DetailsList);
                MyTable.draw();
            }
            else {

                MyTable.row.add(object).draw();
            }
        }
        AfterAddItem();
        clearcontrol();
    }

    function RowDoublClick() {

    }
    function AfterDeleteItem() { }
    function Delete(index, t) {
       // debugger;
        DetailsList = DetailsList.filter(function (_obj) { return _obj.SerialNo != index });
        MyTable.row($(t).parents('tr')).remove().draw(false);
        AfterDeleteItem();

    }
    //*****************************
  
 
    var CurrentQty = 0;
    function CheckQty() {
        var _qty = $("#Qty").val();
        if (_qty > CurrentQty) {
            ShowMessage("", "الكميه  المطلوبه  غير  متوافره", "red");
            $("#Qty").val("0");
        }
    }
    
    function Checkbalance(_ItemID=0) {
        if (_ItemID == -1 || _ItemID==0 ) {
                return;
            }
            $.ajax({
                url: '@Url.Action("Checkbalance", "Items")',
                dataType: "json",
                data: { "ItemID": _ItemID},
                type: "Post",
                success: function (data) {
                  //  debugger;
                    console.log(data);
                    if (data == "Fail") {
                        CurrentQty = 0;
                        ShowMessage("","العنصر غير  موجود  بالمخزن","red")
                        valid = false;
                        return valid;
                    } else {
                        var result = data;
                        if (result < 1) {
                            CurrentQty = 0;
                            valid = false;
                            ShowMessage("", "كميه  العنصر غير متوافره","red")
                            return valid;
                        }
                        valid = true;
                        CurrentQty = result;
                        ShowMessage("done", "  (" + result + ") الكميه  الحاليه  للعنصر تساوى ", "Green")
                        return valid;
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

    function DataTableOperation(CheckPrint, CheckDelete, _RowID, hasDetails) {

        if (CheckPrint == undefined)
            CheckPrint = false;
        if (CheckDelete == undefined)
            CheckDelete = false;
        //if (hasDetails = undefined)
        //    hasDetails = false;
        var _col = "";
        _col += '       <a href="#" onclick=" Edit('+_RowID+',this);return false;"><span class="glyphicon glyphicon-pencil" title="Edit"></span></a>';
        if (CheckPrint) {
            _col += '       <a href="#" onclick="PrintIndex(' + _RowID + ',' + hasDetails +',this);return false;"><span class="fa fa-lg fa-print" title="طباعه"></span></a>';
        }
        if (CheckDelete) {
            _col += '      <a href="#" onclick="DeleteFromIndex('+_RowID+',this);return false;"><span class="fa fa-lg fa-trash" title="حذف"></span></a>';
        }
        return _col;
    }
    function Edit(_RowID, _row) {
      //  debugger;
            //var table = $('#demoGrid').DataTable();
            //var _selectrow = table.row($(_row).parents('tr')).data();
             location.href = ''+EditUrl+'?id=' +_RowID;
            // location.href = '@Url.Action("", "Sales")?id=' + _RowID;
        }

        //function PrintIndex(_RowID, _row) {
        
        //     location.href = ''+PrintUrl+'?id=' +_RowID;
        //}
    
    function PrintIndex(_RowID, hasDetails, _row) {
        console.log(hasDetails);
        debugger;
        Model = {
            InvoiceID: _RowID,
            ReportType: hasDetails ? "DtInvoice" :"MsInvoice"
        };
        $.ajax({
            url: "/Reports/FillDS",
            type: "POST",
            data: { Index: Model },
            success: function (data) {
                if (hasDetails) {
                    var query = "rpt=DtInvoice&GenType=" + false;
                } else {
                    var query = "rpt=MsInvoice&GenType=" + false;
                }
                window.open("/Report/BaseReport.aspx?" + query);
            }
        });

        

        //var href = '' + PrintUrl + '?id=' + _RowID;
        //$('#PrintDiv').load(href);
        //$('#myModal').modal('show');
    }
       function DeleteFromIndex(_RowID, t) {
           // debugger;
           // alert(_RowID);
            $.SmartMessageBox({
                title: "حذف",
                content: "هل تريد الحذف...؟",
                buttons: '[لا][نعم]'
            }, function (ButtonPressed) {
                if (ButtonPressed === "نعم") {
                    var url = DeleteUrl;
                    $.post(url, { ID: _RowID }, function (data) {
                        debugger;
                        NotificationMessage(data);
                        loadTable.draw();
                    });

                }
                if (ButtonPressed === "لا") {
                    $.smallBox({
                        title: "تم الرجوع عن الحذف",
                        content: "",
                        color: "#C46A69",
                        iconSmall: "fa fa-times fa-2x fadeInRight animated",
                        timeout: 4000
                    });
                }

            });

        }
    var loadcolumns = [];
    var loadTable;
    function FindDataTable(loadurl) {
       // debugger;

        var responsiveHelper_demoGrid = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
      loadTable=  $("#demoGrid").DataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                if (!responsiveHelper_demoGrid) {
                    responsiveHelper_demoGrid = new ResponsiveDatatablesHelper($('#demoGrid'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_demoGrid.createExpandIcon(nRow);
            },
            " drawCallback": function (oSettings) {
                responsiveHelper_demoGrid.respond(oSettings);
            },
            "processing": true, // for show progress bar
            "responsive": true,
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "ajax": {
                "url": loadurl,
                "type": "POST",
                "datatype": "json"
            },
            columns: loadcolumns,
        });
    }

    function initalizeTableTools() {
        var buttons = [
            {
                "sExtends": "copy", "sTitle": "copy", "sButtonText": "Copy", "mColumns": columnsindices, "oSelectorOpts": { "filter": "applied" }
            },
            {
                "sExtends": "xls", "sTitle": "xls", "sFileName": 'xls.xls', "sButtonText": "Excel", "mColumns": columnsindices, "oSelectorOpts": { "filter": "applied" }
            },
            {
                "sExtends": "print",
                "sButtonText": "Print",
                "sMessage": "Generated by Schools management system <i>(press Esc to close)</i>",
                "mColumns": columnsindices,
                "oSelectorOpts": { "filter": "applied" }
            }
        ];


        if ('currentLanguageAbbrevation' == 'en') {
            buttons = [
                {
                    "sExtends": "copy", "sTitle": "copy", "sButtonText": "Copy", "mColumns": columnsindices, "oSelectorOpts": { "filter": "applied" }
                },
                {
                    "sExtends": "csv", "sTitle": "csv", "sButtonText": "CSV", "mColumns": columnsindices, "oSelectorOpts": { "filter": "applied" }
                },
                {
                    "sExtends": "xls", "sTitle": "xls", "sFileName": 'xls.xls', "sButtonText": "Excel", "mColumns": columnsindices, "oSelectorOpts": { "filter": "applied" }
                },
                {
                    "sExtends": "pdf",
                    "sTitle": "PDF",
                    "sButtonText": "PDF",
                    "sPdfMessage": "",
                    "sPdfSize": "letter",
                    "mColumns": columnsindices,
                    "oSelectorOpts": { "filter": "applied" }
                },
                {
                    "sExtends": "print",
                    "sButtonText": "Print",
                    "sMessage": "Generated by Schools management system <i>(press Esc to close)</i>",
                    "mColumns": columnsindices,
                    "oSelectorOpts": { "filter": "applied" }
                }
            ];
        }

        return buttons;
    }

    var languageJsonUrl = ('en' == 'en') ? '//cdn.datatables.net/plug-ins/1.10.13/i18n/English.json' : "//cdn.datatables.net/plug-ins/1.10.13/i18n/Arabic.json";
</script>

@if (@Model is HelperResult)
{
    @Model
}

